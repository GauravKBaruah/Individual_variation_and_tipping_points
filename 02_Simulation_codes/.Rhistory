setwd("~/Dropbox/EAWAG PostDoc/Individual_variation_and_tipping_points/02_Simulation_codes")
source('~/Dropbox/EAWAG PostDoc/Individual_variation_and_tipping_points/02_Simulation_codes/tipping_point_code1.1.R')
source('~/Dropbox/EAWAG PostDoc/Individual_variation_and_tipping_points/02_Simulation_codes/tipping_point_code1.1.R')
require(deSolve) ## for integrating ordinary differential equations
require(tidyverse) ## for efficient data manipulation & plotting
require(cowplot) ## for arranging plots in a grid
require(dplyr)
require(readr)
require(beepr)
require(viridis)
theme_set(theme_classic())
# reading all the datasets
# calculating nestedness and connectance
mydir = 'plant_pollinator' #path to the directory where all the network .csv files are located
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
newfiles<-myfiles[1:101]
#empty dataframe creation
fact<- expand.grid( `web` =newfiles,
`noise`=c("no_noise"), # could be also c("additive", "multiplicative", "no_noise)
`interaction_type`= "trade_off", # could be also c("trade_off", "no_trade off")
`individual.variation` = c("high","low"),
`evolution`="yes",
`random_seed`=4327+1*100) %>%
as_tibble %>%
mutate(`tipping.point`=0,
degree.plants=0,
degree.animals=0,
nestedness=0,
connectance=0)
set.seed(1234)
model.t<-list()
new_ddf<-NULL
new_gamma_df<-NULL
mut.strength <- seq(0,8,0.15)
r=1
mut.strength <- seq(0,3,0.15)
r=1
g<-adj.mat(myfiles[which(myfiles == fact$web[r])]) #network web names
g
fact$web
source('~/Dropbox/EAWAG PostDoc/Individual_variation_and_tipping_points/02_Simulation_codes/01_functions_species_tipping_point.R')
setwd("~/Dropbox/EAWAG PostDoc/Individual_variation_and_tipping_points/02_Simulation_codes")
# reading all the datasets
# calculating nestedness and connectance
mydir = '~/Dropbox/EAWAG PostDoc/Individual_variation_and_tipping_points/01_Data/Network data/plant_pollinator' #path to the directory where all the network .csv files are located
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
newfiles<-myfiles[1:101]
#empty dataframe creation
fact<- expand.grid( `web` =newfiles,
`noise`=c("no_noise"), # could be also c("additive", "multiplicative", "no_noise)
`interaction_type`= "trade_off", # could be also c("trade_off", "no_trade off")
`individual.variation` = c("high","low"),
`evolution`="yes",
`random_seed`=4327+1*100) %>%
as_tibble %>%
mutate(`tipping.point`=0,
degree.plants=0,
degree.animals=0,
nestedness=0,
connectance=0)
fact
# reading all the datasets
# calculating nestedness and connectance
mydir = '~/Dropbox/EAWAG PostDoc/Individual_variation_and_tipping_points/01_Data/Network data/plant_pollinator' #path to the directory where all the network .csv files are located
# reading all the datasets
# calculating nestedness and connectance
mydir = '~/Dropbox/EAWAG PostDoc/Individual_variation_and_tipping_points/01_Data/Network data/' #path to the directory where all the network .csv files are located
myfiles = list.files(path=mydir, pattern="*.csv", full.names=TRUE)
newfiles<-myfiles[1:101]
newfiles
#empty dataframe creation
fact<- expand.grid( `web` =newfiles,
`noise`=c("no_noise"), # could be also c("additive", "multiplicative", "no_noise)
`interaction_type`= "trade_off", # could be also c("trade_off", "no_trade off")
`individual.variation` = c("high","low"),
`evolution`="yes",
`random_seed`=4327+1*100) %>%
as_tibble %>%
mutate(`tipping.point`=0,
degree.plants=0,
degree.animals=0,
nestedness=0,
connectance=0)
fact
set.seed(1234)
model.t<-list()
new_ddf<-NULL
new_gamma_df<-NULL
mut.strength <- seq(0,3,0.15)
r=1
g<-adj.mat(myfiles[which(myfiles == fact$web[r])]) #network web names
source('~/Dropbox/EAWAG PostDoc/Individual_variation_and_tipping_points/02_Simulation_codes/tipping_point_code1.1.R')
g<-adj.mat(myfiles[which(myfiles == fact$web[r])]) #network web names
Aspecies<- dim(g)[2] # no of animal species
Plantspecies<- dim(g)[1] # no of plant species
degree.animals<-degree.plants<-numeric()
#degree of plants and anichmals
for(i in 1:Plantspecies){
degree.plants[i]<-sum(g[i,])} # degree of plants
for(j in 1:Aspecies){
degree.animals[j]<-sum(g[,j]) # degree of animals
}
##control loop for selecting whether variation is high or low
if(fact$individual.variation[r] == "low"){
sig <-runif((Aspecies+Plantspecies),0.0005,0.001)}else if(fact$individual.variation[r] == "high"){
sig <-runif((Aspecies+Plantspecies),0.05,0.5)}
#heritabilities
h2<-runif((Aspecies+Plantspecies),0.2,0.2)
## initial species densities
N <- runif( (Aspecies+Plantspecies) , 1,1)
nainit<- N[1:Aspecies]
npinit<-N[(Aspecies+1): (Aspecies+Plantspecies)]
#initial mean trait values
muinit <-runif((Aspecies+Plantspecies), -1,1)
mainit<-muinit[1:Aspecies]
mpinit<-muinit[(Aspecies+1): (Aspecies+Plantspecies)]
#competition coefficients
Amatrix<-mat.comp(g)$Amatrix
Pmatrix<-mat.comp(g)$Pmatrix
setwd("~/Dropbox/EAWAG PostDoc/Individual_variation_and_tipping_points/02_Simulation_codes")
source('~/Dropbox/EAWAG PostDoc/Individual_variation_and_tipping_points/02_Simulation_codes/tipping_point_code1.1.R')
#competition coefficients
Amatrix<-mat.comp(g)$Amatrix
mat.comp<-function(matrix){
Aspecies<- dim(matrix)[2]
Plantspecies<- dim(matrix)[1]
Amatrix<-strength*matrix(runif(Aspecies^2, 0.0001, 0.001), nrow=Aspecies, ncol = Aspecies)/Aspecies #scaled by number of competitors within a guild
diag(Amatrix)<-1 #intraspecific competition for animals
Pmatrix<-strength*matrix(runif(Plantspecies^2, 0.0001, 0.001), nrow=Plantspecies, ncol = Plantspecies)/Plantspecies ##scaled by number of competitors within a guild
diag(Pmatrix)<-1 #intraspecific competion for plants
out<-return(list(Amatrix=Amatrix,Pmatrix=Pmatrix))
}
#competition coefficients
Amatrix<-mat.comp(g)$Amatrix
mat.comp<-function(matrix){
Aspecies<- dim(matrix)[2]
Plantspecies<- dim(matrix)[1]
Amatrix<-matrix(runif(Aspecies^2, 0.0001, 0.001), nrow=Aspecies, ncol = Aspecies)/Aspecies #scaled by number of competitors within a guild
diag(Amatrix)<-1 #intraspecific competition for animals
Pmatrix<-matrix(runif(Plantspecies^2, 0.0001, 0.001), nrow=Plantspecies, ncol = Plantspecies)/Plantspecies ##scaled by number of competitors within a guild
diag(Pmatrix)<-1 #intraspecific competion for plants
out<-return(list(Amatrix=Amatrix,Pmatrix=Pmatrix))
}
source('~/Dropbox/EAWAG PostDoc/Individual_variation_and_tipping_points/02_Simulation_codes/tipping_point_code1.1.R')
#competition coefficients
Amatrix<-mat.comp(g)$Amatrix
Pmatrix<-mat.comp(g)$Pmatrix
Amatrix
Pmatrix
#w^2 value
gamma=0.5
#gamma_0 value
mut.strength<- mut.strength
nestedness<-nestedness_NODF(g)
C<-Connectance(g)
web.name<-fact$web[r]
#growth rates
ba<-runif(Aspecies, -0.05,-0.05)
bp<-runif(Plantspecies,-0.05,-0.05)
#degrees
dganimals<-degree.animals
dgplants<-degree.plants
ic <-c(nainit, npinit, mainit,mpinit)
#fact$noise
params <- list(time=time,matrix=g,sig=sig,Amatrix=Amatrix,
Pmatrix=Pmatrix,w=gamma,noise=fact$noise[r],
mut.strength=mut.strength,m=muinit,C=C,nestedness=nestedness,
web.name=web.name,h2=h2, ba=ba,bp=bp,dganimals=dganimals,
dgplants=dgplants,
interaction_type=fact$interaction_type[r])
start.time =2000
start.time =200
model.t<-lapply(1, Mcommunity_1,time=start.time,state=ic,
pars=params)
start.time =1000
model.t<-lapply(1, Mcommunity_1,time=start.time,state=ic,
pars=params)
model.t
plot(model.t[[1]]$total.community.abundance)
